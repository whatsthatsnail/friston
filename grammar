Syntax:
    CAPITALIZE terminals with variable literals
    "quote" terminals with exact lexemes (no literal)
    | or
    * zero or more
    ()? optional

program         -> declaration* EOF ;

declaration     -> funcDecl
                |  varDecl
                |  statement ;

funcDecl        -> "function" IDENTIFIER ":" arguments? "=" block;

varDecl         -> "let" IDENTIFIER ( "=" expression )? NEWLINE 
                |  "let" IDENTIFIER ( "=" expression )? ";" ;

statement       -> exprStmt
                |  ifStmt
                |  block ;

block           -> INDENT declaration* DEDENT ;

exprStmt        -> expression NEWLINE
                |  expression ";" ;
ifStmt          -> "if" expression "then" statement ( "else" "then" statement )? ;
whileStmt       -> "while" expression "then" statement ;
forStmt         -> "for" declaration expression ";" statement "then" statement ;
printStmt       -> "print" expression NEWLINE ;

arguments       ->  expression ( "," expression)* ;
expression      -> assignment ;
assignment      -> IDENTIFIER "=" assignment
                |  logic_or :
logicOr         -> logic_and ( "or" logic_and )* ;
logicAnd        -> equality ( "and" equality )* ;
equality        -> comparison ( ("==" | "!=") comparison)* ;
comparison      -> addition ( ("<" | "<=" | ">" | ">=") addition)* ;
addition        -> multiplication ( ("+" | "-") multiplication )* ;
multiplication  -> unary ( ("*" | "/") unary )* ;
unary           -> ("-" | "!") unary | call ;
call            -> primary ( "(" arguments? ")" )* ;
primary         -> NUMBER | STRING | "true" | "false" | "nil"
                |  "(" expression ")"
                |  IDENTIFIER ;

INDENT          -> '    ' -> ;
DEDENT          -> '    ' <- ;
NEWLINE         -> "/n" ;